==================
Lambda
==================


// RUN: bara %s -interpret | FileCheck %s


var getUniqueNumber = \ => {
  var a = 0;
  return \ => {
    a += 1;
    return a;
  };
}();

print(getUniqueNumber());
// CHECK: 1

print(getUniqueNumber());
// CHECK: 2

print(getUniqueNumber());
// CHECK: 3


var outOfLambda = 0;

var inLambda = \ => {
  outOfLambda += 1;
  return outOfLambda;
};

print(inLambda());
// CHECK: 1

print(outOfLambda);
// CHECK: 0

print(inLambda());
// CHECK: 2

print(outOfLambda);
// CHECK: 0

---

(source_file
  (comment
    (litSupport))
  (program
    (declarationStatement
      (pattern
        (identifierPattern
          (identifier)))
      (callExpression
        (lambdaExpression
          (compoundStatement
            (declarationStatement
              (pattern
                (identifierPattern
                  (identifier)))
              (integerLiteral
                (integer)))
            (returnStatement
              (lambdaExpression
                (compoundStatement
                  (operatorAssignmentStatement
                    (identifierExpression
                      (identifier))
                    (integerLiteral
                      (integer)))
                  (returnStatement
                    (identifierExpression
                      (identifier))))))))))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (callExpression
          (identifierExpression
            (identifier)))))
    (comment
      (litSupport))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (callExpression
          (identifierExpression
            (identifier)))))
    (comment
      (litSupport))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (callExpression
          (identifierExpression
            (identifier)))))
    (comment
      (litSupport))
    (declarationStatement
      (pattern
        (identifierPattern
          (identifier)))
      (integerLiteral
        (integer)))
    (declarationStatement
      (pattern
        (identifierPattern
          (identifier)))
      (lambdaExpression
        (compoundStatement
          (operatorAssignmentStatement
            (identifierExpression
              (identifier))
            (integerLiteral
              (integer)))
          (returnStatement
            (identifierExpression
              (identifier))))))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (callExpression
          (identifierExpression
            (identifier)))))
    (comment
      (litSupport))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (identifierExpression
          (identifier))))
    (comment
      (litSupport))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (callExpression
          (identifierExpression
            (identifier)))))
    (comment
      (litSupport))
    (expressionStatement
      (callExpression
        (identifierExpression
          (identifier))
        (identifierExpression
          (identifier)))))
  (comment
    (litSupport)))

