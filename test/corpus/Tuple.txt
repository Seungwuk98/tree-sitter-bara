==================
Tuple
==================


// RUN: bara %s -ast-print | FileCheck %s

//===----------------------------------------------------------------------===//
/// Empty tuple 
//===----------------------------------------------------------------------===//


var a = ();
// CHECK: var a = ();


//===----------------------------------------------------------------------===//
/// One tuple 
//===----------------------------------------------------------------------===//

var b = (1,);
// CHECK: var b = (1,); 


//===----------------------------------------------------------------------===//
/// Tuple with extra comma 
//===----------------------------------------------------------------------===//

var c = (1, 2,);
// CHECK: var c = (1, 2);


//===----------------------------------------------------------------------===//
/// Normal tuple 
//===----------------------------------------------------------------------===//

var d = (1, 2, 3);
// CHECK: var d = (1, 2, 3);


---
    (source_file
      (comment
        (litSupport))
      (comment)
      (comment)
      (comment)
      (program
        (declarationStatement
          (pattern
            (identifierPattern
              (identifier)))
          (tupleExpression))
        (comment
          (litSupport))
        (comment)
        (comment)
        (comment)
        (declarationStatement
          (pattern
            (identifierPattern
              (identifier)))
          (tupleExpression
            (integerLiteral
              (integer))))
        (comment
          (litSupport))
        (comment)
        (comment)
        (comment)
        (declarationStatement
          (pattern
            (identifierPattern
              (identifier)))
          (tupleExpression
            (integerLiteral
              (integer))
            (integerLiteral
              (integer))))
        (comment
          (litSupport))
        (comment)
        (comment)
        (comment)
        (declarationStatement
          (pattern
            (identifierPattern
              (identifier)))
          (tupleExpression
            (integerLiteral
              (integer))
            (integerLiteral
              (integer))
            (integerLiteral
              (integer)))))
      (comment
        (litSupport)))

